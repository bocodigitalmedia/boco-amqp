// Generated by CoffeeScript 1.6.3
(function() {
  var Async, Channel, When;

  Async = require('async');

  When = require('when');

  Channel = (function() {
    function Channel(properties) {
      if (properties == null) {
        properties = {};
      }
      this.connection = properties.connection;
      this.promiseForChannel = properties.promiseForChannel;
    }

    Channel.prototype.assertSchema = function(schema, callback) {
      var assertExchangesAndQueues;
      assertExchangesAndQueues = function(channel) {
        var assertExchange, assertExchanges, assertQueue, assertQueues;
        assertExchange = function(exch, done) {
          return channel.assertExchange(exch.name, exch.type, exch.options, done);
        };
        assertExchanges = function(done) {
          return Async.eachSeries(schema.exchanges, assertExchange, done);
        };
        assertQueue = function(queue, done) {
          return channel.assertQueue(queue.name, queue.options, done);
        };
        assertQueues = function(done) {
          return Async.eachSeries(schema.queues, assertQueue, done);
        };
        return Async.series([assertExchanges, assertQueues], function(error) {
          return callback(error);
        });
      };
      this.promiseForChannel.then(assertExchangesAndQueues).done();
      return void 0;
    };

    return Channel;

  })();

  module.exports = Channel;

}).call(this);

/*
//@ sourceMappingURL=Channel.map
*/
