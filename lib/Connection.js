// Generated by CoffeeScript 1.6.3
(function() {
  var Channel, Connection, When;

  When = require('when');

  Channel = require('./Channel');

  Connection = (function() {
    function Connection(properties) {
      if (properties == null) {
        properties = {};
      }
      this.uri = properties.uri;
      this.promiseForConnection = properties.promiseForConnection;
    }

    Connection.prototype.createChannel = function(options) {
      var getPromiseForChannel, promiseForChannel;
      if (options == null) {
        options = {};
      }
      getPromiseForChannel = function(connection) {
        var deferred, type;
        deferred = When.defer();
        type = options.confirmationMode ? "ConfirmChannel" : "Channel";
        connection["create" + type](function(error, channel) {
          if (error != null) {
            return deferred.reject(error);
          }
          return deferred.resolve(channel);
        });
        return deferred.promise;
      };
      promiseForChannel = When(this.promiseForConnection).then(getPromiseForChannel);
      return new Channel({
        connection: this,
        promiseForChannel: promiseForChannel
      });
    };

    Connection.prototype.close = function(callback) {
      return this.promiseForConnection.then(function(connection) {
        return connection.close(callback);
      });
    };

    return Connection;

  })();

  module.exports = Connection;

}).call(this);

/*
//@ sourceMappingURL=Connection.map
*/
