// Generated by CoffeeScript 1.6.3
(function() {
  var Exchange, Queue, QueueBinding, Schema;

  Queue = require('./Queue');

  Exchange = require('./Exchange');

  QueueBinding = require('./QueueBinding');

  Schema = (function() {
    function Schema(properties) {
      if (properties == null) {
        properties = {};
      }
      this.exchanges = properties.exchanges;
      this.queues = properties.queues;
      this.queueBindings = properties.queueBindings;
      this.setDefaults();
    }

    Schema.prototype.setDefaults = function() {
      if (this.exchanges == null) {
        this.exchanges = [];
      }
      if (this.queues == null) {
        this.queues = [];
      }
      if (this.queueBindings == null) {
        return this.queueBindings = [];
      }
    };

    Schema.prototype.defineExchange = function(name, type, options) {
      var exchange;
      exchange = new Exchange({
        name: name,
        type: type,
        options: options
      });
      this.exchanges.push(exchange);
      return exchange;
    };

    Schema.prototype.defineQueue = function(name, options) {
      var queue;
      queue = new Queue({
        name: name,
        options: options
      });
      this.queues.push(queue);
      return queue;
    };

    Schema.prototype.defineQueueBinding = function(queue, exchange, pattern, args) {
      var binding;
      binding = new QueueBinding({
        queueName: queue,
        exchangeName: exchange,
        pattern: pattern,
        "arguments": args
      });
      this.queueBindings.push(binding);
      return binding;
    };

    return Schema;

  })();

  module.exports = Schema;

}).call(this);

/*
//@ sourceMappingURL=Schema.map
*/
